import socket
import subprocess
from uuid import getnode as get_mac

honeyd_ip = "2001:db8:10::1"
prefix = "2001:db8:10::"
pathToYourIpUpdateScript = 'C:\your\path\to\update_ip_winxp.bat'

#generate mac and an ipv6 address based on the ethernet address
uuid = get_mac()
mac = ':'.join('%02X' % ((uuid >> 8*i) & 0xff) for i in reversed(xrange(6)))
mac = mac.lower()

uuid_with_unique_bit = uuid | 0x020000000000
eui = ':'.join('%04X' % ((uuid_with_unique_bit >> 16*i) & 0xffff) for i in reversed(xrange(3)))
eui = eui.lower()
eui = eui[:7]+ "ff:fe" +eui[7:]
print "my mac is %s and my eui is %s" % (mac, eui)

autogenerated_address = prefix + eui
changeIPScriptParameters = [autogenerated_address, " 2001:db8::1"]
subprocess.call(['C:\change_ip.bat',changeIPScriptParameters])

#send newly generated ip to honeyd
client_socket = socket.socket(socket.AF_INET6,socket.SOCK_STREAM)
client_socket.connect((honeyd_ip,4455))
client_socket.send(mac+";"+autogenerated_address)
client_socket.close()

#wait for ip change messages
s= socket.socket(socket.AF_INET6, socket.SOCK_STREAM)
s.bind((autogenerated_address,50000))
s.listen(1)

try:
  connection, addr = s.accept()
  addrToConfigure = connection.recv(1024).strip()
  if not addrToConfigure:
    connection.close()
  else:
    print "configure %s" %addrToConfigure
    changeIPScriptParameters = [addrToConfigure, " "+autogenerated_address]
    subprocess.call([pathToYourIpUpdateScript,changeIPScriptParameters])
finally:
  s.close()
  
#you may want to clean up the files automatically after execution